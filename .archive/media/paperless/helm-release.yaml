---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: paperless
      version: 9.1.3
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m
  values:
    env:
      PAPERLESS_REDIS: 'redis://paperless-redis-master'
      PAPERLESS_OCR_LANGUAGE: eng
      USERMAP_UID: 568
      USERMAP_GID: 568
      PAPERLESS_TIME_ZONE: '${TIMEZONE}'
      PAPERLESS_DBNAME: paperless
      PAPERLESS_DBUSER: paperless
      PAPERLESS_DBPASS: '${SECRET_PAPERLESS_POSTGRES_PASSWORD}'
      PAPERLESS_DBHOST: paperless-postgresql.media.svc.cluster.local
      PAPERLESS_DBPORT: 5432
      PAPERLESS_DBSSLMODE: disable
      PAPERLESS_CONSUMER_POLLING: 300
      PAPERLESS_CONSUMER_RECURSIVE: true
      PAPERLESS_TIKA_ENABLED: true
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_ADMIN_USER: '${SECRET_PAPERLESS_USERNAME}'
      PAPERLESS_ADMIN_PASSWORD: '${SECRET_PAPERLESS_PASSWORD}'
      PAPERLESS_URL: "https://paperless.${SECRET_DOMAIN}"
    ingress:
      main:
        enabled: true
        ingressClassName: 'nginx'
        annotations:
          cert-manager.io/cluster-issuer: 'letsencrypt-production'
        hosts:
          - host: 'paperless.${SECRET_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - 'paperless.${SECRET_DOMAIN}'
            secretName: 'paperless-tls'

    persistence:
      data:
        enabled: true
        existingClaim: paperless-data-v1
      media:
        enabled: true
        existingClaim: paperless-media-v1
      consume:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDR}"
            path: /srv/nfs/docs/consume
      export:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDR}"
            path: /srv/nfs/docs/export

    redis:
      enabled: true
      architecture: standalone
    postgresql:
      enabled: true
      postgresqlUsername: paperless
      postgresqlPassword: ${SECRET_PAPERLESS_POSTGRES_PASSWORD}
      postgresqlDatabase: paperless
      persistence:
        enabled: true
